
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BITWISE BOOLEAN COMMA COMPARISON C_LOG DECREMENT DIVIDE IDENTIFIER INCREMENT LBRACKET LOGICAL LPAREN MINUS NULL NUMBER PLUS RBRACKET RPAREN SHORTHAND STRING TIMES TYPE UBITWISE ULOGICAL WHILEstatement_while : WHILE LPAREN expressions RPAREN LBRACKET statements RBRACKETexpressions : expression\n                   | expression LOGICAL expressionsexpression : IDENTIFIER\n                  | NUMBER\n                  | BOOLEAN\n                  | NULL\n                  | STRING\n                  | expression BITWISE expression\n                  | UBITWISE expression\n                  | expression COMPARISON expression\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | LPAREN expression RPAREN\n                  | ULOGICAL expressionstatements : statement\n                  | statement statementsstatement : assign_stmt\n                 | c_log_stmt\n                 | statement_whilec_log_stmt : C_LOG LPAREN args RPARENargs : expression\n            | expression COMMA argsassign_stmt : TYPE IDENTIFIER ASSIGN expressions\n                   | TYPE IDENTIFIER ASSIGN expression COMMA multiple_assign\n                   | IDENTIFIER ASSIGN expressions\n                   | IDENTIFIER SHORTHAND expressions\n                   | IDENTIFIER INCREMENT\n                   | IDENTIFIER DECREMENT\n                   | INCREMENT IDENTIFIER\n                   | DECREMENT IDENTIFIERmultiple_assign : IDENTIFIER ASSIGN expressions\n                       | IDENTIFIER ASSIGN expressions COMMA multiple_assign'
    
_lr_action_items = {'WHILE':([0,6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,44,49,50,51,52,55,56,59,60,61,66,68,70,],[2,-2,-4,-5,-6,-7,-8,-10,-17,-16,2,-3,-9,-11,-12,-13,-14,-15,2,-20,-21,-22,-1,-30,-31,-32,-33,-28,-29,-26,-2,-23,-27,-34,-35,]),'$end':([1,44,],[0,-1,]),'LPAREN':([2,3,4,12,13,16,17,18,19,20,21,22,43,47,48,53,54,62,67,],[3,4,4,4,4,4,4,4,4,4,4,4,53,4,4,4,4,4,4,]),'IDENTIFIER':([3,4,6,7,8,9,10,11,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,41,42,44,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,66,67,68,69,70,],[7,7,-2,-4,-5,-6,-7,-8,7,7,7,7,7,7,7,7,7,-10,-17,-16,40,-3,-9,-11,-12,-13,-14,-15,40,-20,-21,-22,46,51,52,-1,7,7,-30,-31,-32,-33,7,7,-28,-29,-26,-2,-23,7,65,-27,7,-34,65,-35,]),'NUMBER':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'BOOLEAN':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NULL':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'STRING':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'UBITWISE':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ULOGICAL':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'RPAREN':([5,6,7,8,9,10,11,14,23,24,25,27,28,29,30,31,32,33,57,58,64,],[15,-2,-4,-5,-6,-7,-8,25,-10,-17,-16,-3,-9,-11,-12,-13,-14,-15,61,-24,-25,]),'TYPE':([6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,44,49,50,51,52,55,56,59,60,61,66,68,70,],[-2,-4,-5,-6,-7,-8,-10,-17,-16,39,-3,-9,-11,-12,-13,-14,-15,39,-20,-21,-22,-1,-30,-31,-32,-33,-28,-29,-26,-2,-23,-27,-34,-35,]),'INCREMENT':([6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,40,44,49,50,51,52,55,56,59,60,61,66,68,70,],[-2,-4,-5,-6,-7,-8,-10,-17,-16,41,-3,-9,-11,-12,-13,-14,-15,41,-20,-21,-22,49,-1,-30,-31,-32,-33,-28,-29,-26,-2,-23,-27,-34,-35,]),'DECREMENT':([6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,40,44,49,50,51,52,55,56,59,60,61,66,68,70,],[-2,-4,-5,-6,-7,-8,-10,-17,-16,42,-3,-9,-11,-12,-13,-14,-15,42,-20,-21,-22,50,-1,-30,-31,-32,-33,-28,-29,-26,-2,-23,-27,-34,-35,]),'C_LOG':([6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,44,49,50,51,52,55,56,59,60,61,66,68,70,],[-2,-4,-5,-6,-7,-8,-10,-17,-16,43,-3,-9,-11,-12,-13,-14,-15,43,-20,-21,-22,-1,-30,-31,-32,-33,-28,-29,-26,-2,-23,-27,-34,-35,]),'RBRACKET':([6,7,8,9,10,11,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,44,45,49,50,51,52,55,56,59,60,61,66,68,70,],[-2,-4,-5,-6,-7,-8,-10,-17,-16,-3,-9,-11,-12,-13,-14,-15,44,-18,-20,-21,-22,-1,-19,-30,-31,-32,-33,-28,-29,-26,-2,-23,-27,-34,-35,]),'COMMA':([6,7,8,9,10,11,23,24,25,27,28,29,30,31,32,33,58,60,68,],[-2,-4,-5,-6,-7,-8,-10,-17,-16,-3,-9,-11,-12,-13,-14,-15,62,63,69,]),'LOGICAL':([6,7,8,9,10,11,23,24,25,28,29,30,31,32,33,60,],[16,-4,-5,-6,-7,-8,-10,-17,-16,-9,-11,-12,-13,-14,-15,16,]),'BITWISE':([6,7,8,9,10,11,14,23,24,25,28,29,30,31,32,33,58,60,],[17,-4,-5,-6,-7,-8,17,17,17,-16,17,17,17,17,17,17,17,17,]),'COMPARISON':([6,7,8,9,10,11,14,23,24,25,28,29,30,31,32,33,58,60,],[18,-4,-5,-6,-7,-8,18,18,18,-16,18,18,18,18,18,18,18,18,]),'PLUS':([6,7,8,9,10,11,14,23,24,25,28,29,30,31,32,33,58,60,],[19,-4,-5,-6,-7,-8,19,19,19,-16,19,19,19,19,19,19,19,19,]),'MINUS':([6,7,8,9,10,11,14,23,24,25,28,29,30,31,32,33,58,60,],[20,-4,-5,-6,-7,-8,20,20,20,-16,20,20,20,20,20,20,20,20,]),'TIMES':([6,7,8,9,10,11,14,23,24,25,28,29,30,31,32,33,58,60,],[21,-4,-5,-6,-7,-8,21,21,21,-16,21,21,21,21,21,21,21,21,]),'DIVIDE':([6,7,8,9,10,11,14,23,24,25,28,29,30,31,32,33,58,60,],[22,-4,-5,-6,-7,-8,22,22,22,-16,22,22,22,22,22,22,22,22,]),'LBRACKET':([15,],[26,]),'ASSIGN':([40,46,65,],[47,54,67,]),'SHORTHAND':([40,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_while':([0,26,35,],[1,38,38,]),'expressions':([3,16,47,48,54,67,],[5,27,55,56,59,68,]),'expression':([3,4,12,13,16,17,18,19,20,21,22,47,48,53,54,62,67,],[6,14,23,24,6,28,29,30,31,32,33,6,6,58,60,58,6,]),'statements':([26,35,],[34,45,]),'statement':([26,35,],[35,35,]),'assign_stmt':([26,35,],[36,36,]),'c_log_stmt':([26,35,],[37,37,]),'args':([53,62,],[57,64,]),'multiple_assign':([63,69,],[66,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_while","S'",1,None,None,None),
  ('statement_while -> WHILE LPAREN expressions RPAREN LBRACKET statements RBRACKET','statement_while',7,'p_statement_while','yacc_while.py',5),
  ('expressions -> expression','expressions',1,'p_expressions','yacc_while.py',9),
  ('expressions -> expression LOGICAL expressions','expressions',3,'p_expressions','yacc_while.py',10),
  ('expression -> IDENTIFIER','expression',1,'p_expression','yacc_while.py',13),
  ('expression -> NUMBER','expression',1,'p_expression','yacc_while.py',14),
  ('expression -> BOOLEAN','expression',1,'p_expression','yacc_while.py',15),
  ('expression -> NULL','expression',1,'p_expression','yacc_while.py',16),
  ('expression -> STRING','expression',1,'p_expression','yacc_while.py',17),
  ('expression -> expression BITWISE expression','expression',3,'p_expression','yacc_while.py',18),
  ('expression -> UBITWISE expression','expression',2,'p_expression','yacc_while.py',19),
  ('expression -> expression COMPARISON expression','expression',3,'p_expression','yacc_while.py',20),
  ('expression -> expression PLUS expression','expression',3,'p_expression','yacc_while.py',21),
  ('expression -> expression MINUS expression','expression',3,'p_expression','yacc_while.py',22),
  ('expression -> expression TIMES expression','expression',3,'p_expression','yacc_while.py',23),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','yacc_while.py',24),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yacc_while.py',25),
  ('expression -> ULOGICAL expression','expression',2,'p_expression','yacc_while.py',26),
  ('statements -> statement','statements',1,'p_statements','yacc_while.py',29),
  ('statements -> statement statements','statements',2,'p_statements','yacc_while.py',30),
  ('statement -> assign_stmt','statement',1,'p_statement','yacc_while.py',33),
  ('statement -> c_log_stmt','statement',1,'p_statement','yacc_while.py',34),
  ('statement -> statement_while','statement',1,'p_statement','yacc_while.py',35),
  ('c_log_stmt -> C_LOG LPAREN args RPAREN','c_log_stmt',4,'p_c_log_stmt','yacc_while.py',38),
  ('args -> expression','args',1,'p_args','yacc_while.py',41),
  ('args -> expression COMMA args','args',3,'p_args','yacc_while.py',42),
  ('assign_stmt -> TYPE IDENTIFIER ASSIGN expressions','assign_stmt',4,'p_assign_stmt','yacc_while.py',45),
  ('assign_stmt -> TYPE IDENTIFIER ASSIGN expression COMMA multiple_assign','assign_stmt',6,'p_assign_stmt','yacc_while.py',46),
  ('assign_stmt -> IDENTIFIER ASSIGN expressions','assign_stmt',3,'p_assign_stmt','yacc_while.py',47),
  ('assign_stmt -> IDENTIFIER SHORTHAND expressions','assign_stmt',3,'p_assign_stmt','yacc_while.py',48),
  ('assign_stmt -> IDENTIFIER INCREMENT','assign_stmt',2,'p_assign_stmt','yacc_while.py',49),
  ('assign_stmt -> IDENTIFIER DECREMENT','assign_stmt',2,'p_assign_stmt','yacc_while.py',50),
  ('assign_stmt -> INCREMENT IDENTIFIER','assign_stmt',2,'p_assign_stmt','yacc_while.py',51),
  ('assign_stmt -> DECREMENT IDENTIFIER','assign_stmt',2,'p_assign_stmt','yacc_while.py',52),
  ('multiple_assign -> IDENTIFIER ASSIGN expressions','multiple_assign',3,'p_multiple_assign','yacc_while.py',55),
  ('multiple_assign -> IDENTIFIER ASSIGN expressions COMMA multiple_assign','multiple_assign',5,'p_multiple_assign','yacc_while.py',56),
]
